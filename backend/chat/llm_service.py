from .llm_api import query_llm
from . import finam_api
import json


def handle_user_message(message: str):
    """
    –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ LLM –∏, –µ—Å–ª–∏ —ç—Ç–æ TRADE_COMMAND,
    –≤—ã–ø–æ–ª–Ω—è–µ—Ç –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ —á–µ—Ä–µ–∑ Finam API.
    """
    system_instruction = """
–¢—ã ‚Äî —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–Ω–∞–ª–∏–∑—É –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç—Ä–µ–π–¥–µ—Ä–æ–≤. 
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –ß–ò–°–¢–´–ú JSON-–æ–±—ä–µ–∫—Ç–æ–º.

1. –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å ‚Äî —Ç–æ—Ä–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ (–∫—É–ø–∏—Ç—å, –ø—Ä–æ–¥–∞—Ç—å) –∏–ª–∏ –∑–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö (–∫–æ—Ç–∏—Ä–æ–≤–∫–∏, –ø–æ—Ä—Ç—Ñ–µ–ª—å, –∏—Å—Ç–æ—Ä–∏—è, —Å—Ç–∞–∫–∞–Ω), –∏—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
{
  "type": "TRADE_COMMAND", 
  "data": {
    "operation": "BUY" | "SELL" | "QUOTE" | "PORTFOLIO" | "CANDLES" | "ORDER_BOOK" | "OTHER_INFO",
    "ticker": "SBER" | null,
    "quantity": 10 | null,
    "price": 170.5 | null
  }
}

2. –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å ‚Äî –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –≤–æ–ø—Ä–æ—Å –æ —Ç–µ–±–µ, –∏–ª–∏ –¥—Ä—É–≥–æ–π –Ω–µ—Ç–æ—Ä–≥–æ–≤—ã–π –¥–∏–∞–ª–æ–≥, –∏—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É:
{
  "type": "TEXT_RESPONSE",
  "content": "–¢–≤–æ–π –≤–µ–∂–ª–∏–≤—ã–π –∏ —É–º–µ—Å—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç –∑–¥–µ—Å—å."
}

–í–ù–ò–ú–ê–ù–ò–ï: –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –æ–¥–∏–Ω –∏–∑ –¥–≤—É—Ö —Ñ–æ—Ä–º–∞—Ç–æ–≤. 
–ù–µ –¥–æ–±–∞–≤–ª—è–π –ø–æ—è—Å–Ω–µ–Ω–∏–π, —Ç–µ–∫—Å—Ç–∞ –∏–ª–∏ Markdown.
"""

    prompt = f"""
System: {system_instruction}

User: {message}
"""

    llm_response = query_llm(prompt)

    try:
        structured_response = json.loads(llm_response)
    except json.JSONDecodeError:
        return {"type": "TEXT_RESPONSE", "content": f"–û—à–∏–±–∫–∞ LLM: {llm_response}"}

    # üîπ –ï—Å–ª–∏ —ç—Ç–æ —Ç–æ—Ä–≥–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ ‚Üí –ø—Ä–æ–±—É–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç—å —á–µ—Ä–µ–∑ Finam
    if structured_response.get("type") == "TRADE_COMMAND":
        data = structured_response.get("data", {})
        operation = data.get("operation")
        ticker = data.get("ticker")
        quantity = data.get("quantity")
        price = data.get("price")

        try:
            if operation == "QUOTE":
                result = finam_api.get_quote(ticker, quantity)
                return {"type": "TRADE_COMMAND", "data": {**data, **result}}

            elif operation == "BUY":
                result = finam_api.buy_stock(ticker, quantity, price)
                return {"type": "TRADE_COMMAND", "data": result}

            elif operation == "SELL":
                result = finam_api.sell_stock(ticker, quantity, price)
                return {"type": "TRADE_COMMAND", "data": result}

        except Exception as e:
            return {"type": "TEXT_RESPONSE", "content": f"–û—à–∏–±–∫–∞ Finam API: {str(e)}"}

    return structured_response
